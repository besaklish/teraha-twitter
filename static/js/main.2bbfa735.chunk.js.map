{"version":3,"sources":["screen/Teraha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WRONG_TWITTER_LINK","WRONG_DATE_STRING","Teraha","props","state","series","part","episode","searchWord","broadcastType","generateTwitterLink","bind","generateSearchWord","addDays","calcEpisodeNumber","handleSeriesChange","handlePartChange","handleEpisodeChange","handleSearchWordChange","handleSubmit","date","days","result","Date","setDate","getDate","untilDays","episodeInfo","TerahaInfo","parts","episodes","since","netflixDate","tvDate","untilDate","this","until","toISOString","slice","e","console","error","i","push","length","members","events","epNum","randomSearchWords","appearingMembers","filter","member","startEp","endEp","nicknames","m","nn","happeningEvents","event","happeningEventNames","name","randomSearchWord","Math","floor","random","setState","alert","tsCopy","JSON","parse","stringify","parseInt","target","value","preventDefault","formData","FormData","get","twitterLink","window","open","jsxParts","seriesInfo","MenuItem","jsxEpisodes","partInfo","title","onSubmit","Box","mb","color","FormControl","InputLabel","Select","id","defaultValue","onChange","TextField","type","variant","Button","onClick","fontSize","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bbfa735.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TerahaInfo from \"./Teraha.json\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// bad variables\r\nconst WRONG_TWITTER_LINK = \"https://twitter.com/home\";\r\nconst WRONG_DATE_STRING = \"1900-01-01\";\r\n\r\n// interfaces\r\ninterface terahaState {\r\n  series: number;\r\n  part: number;\r\n  episode: number;\r\n  searchWord: string;\r\n  broadcastType: \"Netflix\" | \"TV\";\r\n}\r\n\r\n// main component\r\nclass Teraha extends React.Component<{}, terahaState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      series: 1,\r\n      part: 1,\r\n      episode: 1,\r\n      searchWord: \"テラハ\",\r\n      broadcastType: \"Netflix\",\r\n    };\r\n\r\n    this.generateTwitterLink = this.generateTwitterLink.bind(this);\r\n    this.generateSearchWord = this.generateSearchWord.bind(this);\r\n    this.addDays = this.addDays.bind(this);\r\n    this.calcEpisodeNumber = this.calcEpisodeNumber.bind(this);\r\n    this.handleSeriesChange = this.handleSeriesChange.bind(this);\r\n    this.handlePartChange = this.handlePartChange.bind(this);\r\n    this.handleEpisodeChange = this.handleEpisodeChange.bind(this);\r\n    this.handleSearchWordChange = this.handleSearchWordChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  addDays(date: string, days: number): Date {\r\n    var result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  generateTwitterLink(\r\n    series: number,\r\n    part: number,\r\n    episode: number,\r\n    searchWord: string,\r\n    broadcastType: \"Netflix\" | \"TV\",\r\n    untilDays: number = 3\r\n  ): string {\r\n    try {\r\n      const episodeInfo =\r\n        TerahaInfo[series - 1].parts[part - 1].episodes[episode - 1];\r\n      if (episodeInfo) {\r\n        const since =\r\n          broadcastType === \"Netflix\"\r\n            ? episodeInfo.netflixDate\r\n            : episodeInfo.tvDate;\r\n        if (since === WRONG_DATE_STRING) {\r\n          return WRONG_TWITTER_LINK;\r\n        }\r\n        const untilDate = this.addDays(since, untilDays);\r\n        const until = untilDate.toISOString().slice(0, 10);\r\n        return `https://twitter.com/search?q=${searchWord}%20until%3A${until}%20since%3A${since}`;\r\n      }\r\n      return WRONG_TWITTER_LINK;\r\n    } catch (e) {\r\n      console.error(e);\r\n      return WRONG_TWITTER_LINK;\r\n    }\r\n  }\r\n\r\n  calcEpisodeNumber(): number {\r\n    const season = TerahaInfo[this.state.series - 1];\r\n    const parts = season.parts;\r\n    if (!parts) {\r\n      return -1;\r\n    }\r\n    const episodes = [];\r\n    for (let i = 0; i < this.state.part - 1; i++) {\r\n      for (const episode of parts[i].episodes) {\r\n        episodes.push(episode);\r\n      }\r\n    }\r\n    return episodes.length + this.state.episode;\r\n  }\r\n\r\n  generateSearchWord() {\r\n    // get members\r\n    const members = TerahaInfo[this.state.series - 1].members;\r\n    const events = TerahaInfo[this.state.series - 1].events;\r\n    const epNum = this.calcEpisodeNumber();\r\n    const randomSearchWords = [];\r\n\r\n    if (members) {\r\n      const appearingMembers = members.filter((member) => {\r\n        return member.startEp <= epNum && member.endEp >= epNum;\r\n      });\r\n\r\n      const nicknames: string[] = [];\r\n      for (const m of appearingMembers) {\r\n        for (const nn of m.nicknames) {\r\n          nicknames.push(nn);\r\n        }\r\n      }\r\n\r\n      randomSearchWords.push(...nicknames);\r\n    }\r\n\r\n    if (events) {\r\n      const happeningEvents = events.filter((event) => {\r\n        return event.startEp <= epNum && event.endEp >= epNum;\r\n      });\r\n\r\n      const happeningEventNames: string[] = [];\r\n      for (const event of happeningEvents) {\r\n        happeningEventNames.push(event.name);\r\n      }\r\n\r\n      randomSearchWords.push(...happeningEventNames);\r\n    }\r\n\r\n    const randomSearchWord =\r\n      randomSearchWords[Math.floor(Math.random() * randomSearchWords.length)];\r\n\r\n    if (randomSearchWord) {\r\n      this.setState({ searchWord: `テラハ ${randomSearchWord}` });\r\n    } else {\r\n      alert(\"検索ワードの生成に失敗しました\");\r\n    }\r\n  }\r\n\r\n  handleSeriesChange(e: React.ChangeEvent<{ value: unknown }>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.series = parseInt(e.target.value as string);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handlePartChange(e: React.ChangeEvent<{ value: unknown }>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.part = parseInt(e.target.value as string);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handleEpisodeChange(e: React.ChangeEvent<{ value: unknown }>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.episode = parseInt(e.target.value as string);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handleSearchWordChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    this.setState({ searchWord: e.target.value });\r\n  }\r\n\r\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target as HTMLFormElement);\r\n    const series = parseInt(formData.get(\"series\") as string);\r\n    const part = parseInt(formData.get(\"part\") as string);\r\n    const episode = parseInt(formData.get(\"episode\") as string);\r\n    const searchWord = formData.get(\"searchWord\") as string;\r\n    const broadcastType = formData.get(\"broadcastType\") as \"Netflix\" | \"TV\";\r\n    if (series && part && episode) {\r\n      this.setState({\r\n        series: series,\r\n        part: part,\r\n        episode: episode,\r\n      });\r\n    }\r\n    const twitterLink = this.generateTwitterLink(\r\n      series,\r\n      part,\r\n      episode,\r\n      searchWord,\r\n      broadcastType\r\n    );\r\n\r\n    if (twitterLink === WRONG_TWITTER_LINK) {\r\n      alert(\r\n        \"リンクの作成に失敗しました。\\nNetflixは東京編以降(2015.09~2019.10)をサポートしています。\\nTVは東京(2015-2016)のパート1,エピソード1～軽井沢(2017-2018)のパート3,エピソード6までをサポートしています。\"\r\n      );\r\n    } else {\r\n      window.open(twitterLink, \"_blank\", \"noopener,noreferrer\");\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const jsxParts: JSX.Element[] = [];\r\n    const seriesInfo = TerahaInfo[this.state.series - 1];\r\n    for (let i = 1; i <= seriesInfo.parts.length; i++) {\r\n      jsxParts.push(\r\n        <MenuItem value={i} key={i}>\r\n          Part {i}\r\n        </MenuItem>\r\n      );\r\n    }\r\n\r\n    const jsxEpisodes: JSX.Element[] = [];\r\n    const partInfo = seriesInfo.parts[this.state.part - 1];\r\n    if (partInfo) {\r\n      for (let i = 1; i <= partInfo.episodes.length; i++) {\r\n        jsxEpisodes.push(\r\n          <MenuItem value={i} key={i}>\r\n            Episode {i}: {partInfo.episodes[i - 1].title}\r\n          </MenuItem>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>テラハ配信直後のTwitter</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Box mb={2} color=\"text.primary\">\r\n            <FormControl>\r\n              {/* Choose Series */}\r\n              <InputLabel>シリーズ</InputLabel>\r\n              <Select\r\n                name=\"series\"\r\n                id=\"series\"\r\n                defaultValue={this.state.series}\r\n                onChange={this.handleSeriesChange}\r\n              >\r\n                <MenuItem value=\"1\">\r\n                  BOYS×GIRLS NEXT DOOR (2012–2014, 湘南)\r\n                </MenuItem>\r\n                <MenuItem value=\"2\">\r\n                  BOYS & GIRLS IN THE CITY (2015-2016, 東京)\r\n                </MenuItem>\r\n                <MenuItem value=\"3\">ALOHA STATE (2016-2017, ハワイ)</MenuItem>\r\n                <MenuItem value=\"4\">\r\n                  OPENING NEW DOORS (2017-2018, 軽井沢)\r\n                </MenuItem>\r\n                <MenuItem value=\"5\">TOKYO (2019-2020, 東京)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              {/* Choose Part */}\r\n              <InputLabel>パート</InputLabel>\r\n              <Select\r\n                name=\"part\"\r\n                id=\"part\"\r\n                defaultValue={this.state.part}\r\n                onChange={this.handlePartChange}\r\n              >\r\n                {jsxParts}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              {/* Choose Episode */}\r\n              <InputLabel>エピソード</InputLabel>\r\n              <Select\r\n                name=\"episode\"\r\n                id=\"episode\"\r\n                defaultValue={this.state.episode}\r\n                onChange={this.handleEpisodeChange}\r\n              >\r\n                {jsxEpisodes}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              {/* Choose Broadcast type */}\r\n              <InputLabel>放送</InputLabel>\r\n              <Select\r\n                name=\"broadcastType\"\r\n                id=\"broadcastType\"\r\n                defaultValue={this.state.broadcastType}\r\n              >\r\n                <MenuItem value=\"Netflix\">Netflix</MenuItem>\r\n                <MenuItem value=\"TV\">TV</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={5}>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"searchWord\"\r\n                id=\"searchWord\"\r\n                value={this.state.searchWord}\r\n                onChange={this.handleSearchWordChange}\r\n                variant=\"outlined\"\r\n              />\r\n              <Button variant=\"outlined\" onClick={this.generateSearchWord}>\r\n                ランダムキーワード\r\n              </Button>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={5}>\r\n            <div>\r\n              <Button type=\"submit\" variant=\"outlined\">\r\n                👉Twitterへのリンク👈\r\n              </Button>\r\n            </div>\r\n          </Box>\r\n        </form>\r\n        <Box fontSize={15}>\r\n          Netflixは東京編以降(2015.09~2019.10)をサポートしています。\r\n        </Box>\r\n        <Box fontSize={15} mb={2}>\r\n          TVは東京(2015-2016)のパート1,エピソード1～軽井沢(2017-2018)のパート3,\r\n          エピソード6までをサポートしています。\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Teraha;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Teraha from \"./screen/Teraha\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Teraha></Teraha>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}