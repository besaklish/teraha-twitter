{"version":3,"sources":["screen/Teraha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Teraha","props","state","series","part","episode","searchWord","generateTwitterLink","bind","addDays","handleSeriesChange","handlePartChange","handleEpisodeChange","handleSearchWordChange","handleSubmit","date","days","result","Date","setDate","getDate","untilDays","console","log","episodeInfo","TerahaInfo","parts","episodes","since","untilDate","this","until","toISOString","slice","e","error","tsCopy","JSON","parse","stringify","parseInt","target","value","setState","preventDefault","formData","FormData","get","twitterLink","window","open","jsxParts","seriesInfo","i","length","push","jsxEpisodes","partInfo","title","onSubmit","name","id","defaultValue","onChange","type","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAwMeA,E,kDA3Lb,WAAYC,GAAY,IAAD,8BACrB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,EACRC,KAAM,EACNC,QAAS,EACTC,WAAY,sBAGd,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAKI,oBAAsB,EAAKA,oBAAoBJ,KAAzB,gBAC3B,EAAKK,uBAAyB,EAAKA,uBAAuBL,KAA5B,gBAC9B,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBAfC,E,2CAkBvB,SAAQO,EAAcC,GACpB,IAAIC,EAAS,IAAIC,KAAKH,GAEtB,OADAE,EAAOE,QAAQF,EAAOG,UAAYJ,GAC3BC,I,iCAGT,SACEd,EACAC,EACAC,EACAC,GAES,IADTe,EACQ,uDADY,EAEpB,IACEC,QAAQC,IAAR,sCACiCpB,EADjC,kBACiDC,EADjD,qBACkEC,IAElE,IAAMmB,EACJC,EAAWtB,EAAS,GAAGuB,MAAMtB,EAAO,GAAGuB,SAAStB,EAAU,GAC5D,GAAImB,EAAa,CACf,IAAMI,EAAQJ,EAAYT,KACpBc,EAAYC,KAAKrB,QAAQmB,EAAOP,GAChCU,EAAQF,EAAUG,cAAcC,MAAM,EAAG,IAC/C,MAAM,gCAAN,OAAuC3B,EAAvC,sBAA+DyB,EAA/D,sBAAkFH,GAEpF,MAAO,2BACP,MAAOM,GAEP,OADAZ,QAAQa,MAAMD,GACP,8B,gCAIX,SAAmBA,GACjB,IAAME,EAASC,KAAKC,MAAMD,KAAKE,UAAUT,KAAK5B,QAC9CkC,EAAOjC,OAASqC,SAASN,EAAEO,OAAOC,OAClCZ,KAAKa,SAASP,K,8BAGhB,SAAiBF,GACf,IAAME,EAASC,KAAKC,MAAMD,KAAKE,UAAUT,KAAK5B,QAC9CkC,EAAOhC,KAAOoC,SAASN,EAAEO,OAAOC,OAChCZ,KAAKa,SAASP,K,iCAGhB,SAAoBF,GAClB,IAAME,EAASC,KAAKC,MAAMD,KAAKE,UAAUT,KAAK5B,QAC9CkC,EAAO/B,QAAUmC,SAASN,EAAEO,OAAOC,OACnCZ,KAAKa,SAASP,K,oCAGhB,SAAuBF,GACrB,IAAME,EAASC,KAAKC,MAAMD,KAAKE,UAAUT,KAAK5B,QAC9CkC,EAAO9B,WAAa4B,EAAEO,OAAOC,MAC7BZ,KAAKa,SAASP,K,0BAGhB,SAAaF,GACXA,EAAEU,iBACF,IAAMC,EAAW,IAAIC,SAASZ,EAAEO,QAC1BtC,EAASqC,SAASK,EAASE,IAAI,WAC/B3C,EAAOoC,SAASK,EAASE,IAAI,SAC7B1C,EAAUmC,SAASK,EAASE,IAAI,YAChCzC,EAAauC,EAASE,IAAI,cAC5B5C,GAAUC,GAAQC,GACpByB,KAAKa,SAAS,CACZxC,OAAQA,EACRC,KAAMA,EACNC,QAASA,IAGbiB,QAAQC,IAAR,iBACYsB,EAASE,IAAI,UADzB,kBAC4CF,EAASE,IACjD,QAFJ,qBAGgBF,EAASE,IAAI,aAE7B,IAAMC,EAAclB,KAAKvB,oBACvBJ,EACAC,EACAC,EACAC,GAEF2C,OAAOC,KAAKF,EAAa,SAAU,uBACnC1B,QAAQC,IAAIW,K,oBAGd,WAGE,IAFA,IAAMiB,EAA0B,GAC1BC,EAAa3B,EAAWK,KAAK5B,MAAMC,OAAS,GACzCkD,EAAI,EAAGA,GAAKD,EAAW1B,MAAM4B,OAAQD,IAC5CF,EAASI,KACP,yBAAQb,MAAOW,EAAf,kBACQA,IADeA,IAM3B,IAAMG,EAA6B,GAC7BC,EAAWL,EAAW1B,MAAMI,KAAK5B,MAAME,KAAO,GACpD,GAAIqD,EACF,IAAK,IAAIJ,EAAI,EAAGA,GAAKI,EAAS9B,SAAS2B,OAAQD,IAC7CG,EAAYD,KACV,yBAAQb,MAAOW,EAAf,qBACWA,EADX,KACgBI,EAAS9B,SAAS0B,EAAI,GAAGK,QADlBL,IAO7B,OACE,gCACE,yFACA,uBAAMM,SAAU7B,KAAKhB,aAArB,UACE,8BAEE,yBACE8C,KAAK,SACLC,GAAG,SACHC,aAAchC,KAAK5B,MAAMC,OACzB4D,SAAUjC,KAAKpB,mBAJjB,UAME,wBAAQgC,MAAM,IAAd,oEACA,wBAAQA,MAAM,IAAd,gEAGA,wBAAQA,MAAM,IAAd,yDACA,wBAAQA,MAAM,IAAd,+DACA,wBAAQA,MAAM,IAAd,kDAGJ,8BAEE,wBACEkB,KAAK,OACLC,GAAG,OACHC,aAAchC,KAAK5B,MAAME,KACzB2D,SAAUjC,KAAKnB,iBAJjB,SAMGwC,MAGL,8BAEE,wBACES,KAAK,UACLC,GAAG,UACHC,aAAchC,KAAK5B,MAAMG,QACzB0D,SAAUjC,KAAKlB,oBAJjB,SAMG4C,MAGL,8BACE,uBACEQ,KAAK,OACLJ,KAAK,aACLC,GAAG,aACHC,aAAchC,KAAK5B,MAAMI,WACzByD,SAAUjC,KAAKjB,2BAGnB,8BACE,wBAAQmD,KAAK,SAAb,+D,GApLSC,IAAMC,WCGZC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCKOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.752c9443.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TerahaInfo from \"./Teraha.json\";\r\n\r\n// interfaces\r\ninterface terahaState {\r\n  series: number;\r\n  part: number;\r\n  episode: number;\r\n  searchWord: string;\r\n}\r\n\r\n// main component\r\nclass Teraha extends React.Component<{}, terahaState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      series: 1,\r\n      part: 1,\r\n      episode: 1,\r\n      searchWord: \"テラハ\",\r\n    };\r\n\r\n    this.generateTwitterLink = this.generateTwitterLink.bind(this);\r\n    this.addDays = this.addDays.bind(this);\r\n    this.handleSeriesChange = this.handleSeriesChange.bind(this);\r\n    this.handlePartChange = this.handlePartChange.bind(this);\r\n    this.handleEpisodeChange = this.handleEpisodeChange.bind(this);\r\n    this.handleSearchWordChange = this.handleSearchWordChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  addDays(date: string, days: number): Date {\r\n    var result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  generateTwitterLink(\r\n    series: number,\r\n    part: number,\r\n    episode: number,\r\n    searchWord: string,\r\n    untilDays: number = 3\r\n  ): string {\r\n    try {\r\n      console.log(\r\n        `generateTwitterLink, series ${series}, part ${part}, episode ${episode}`\r\n      );\r\n      const episodeInfo =\r\n        TerahaInfo[series - 1].parts[part - 1].episodes[episode - 1];\r\n      if (episodeInfo) {\r\n        const since = episodeInfo.date;\r\n        const untilDate = this.addDays(since, untilDays);\r\n        const until = untilDate.toISOString().slice(0, 10);\r\n        return `https://twitter.com/search?q=${searchWord}%20until%3A${until}%20since%3A${since}`;\r\n      }\r\n      return \"https://twitter.com/home\";\r\n    } catch (e) {\r\n      console.error(e);\r\n      return \"https://twitter.com/home\";\r\n    }\r\n  }\r\n\r\n  handleSeriesChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.series = parseInt(e.target.value);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handlePartChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.part = parseInt(e.target.value);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handleEpisodeChange(e: React.ChangeEvent<HTMLSelectElement>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.episode = parseInt(e.target.value);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handleSearchWordChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.searchWord = e.target.value;\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target as HTMLFormElement);\r\n    const series = parseInt(formData.get(\"series\") as string);\r\n    const part = parseInt(formData.get(\"part\") as string);\r\n    const episode = parseInt(formData.get(\"episode\") as string);\r\n    const searchWord = formData.get(\"searchWord\") as string;\r\n    if (series && part && episode) {\r\n      this.setState({\r\n        series: series,\r\n        part: part,\r\n        episode: episode,\r\n      });\r\n    }\r\n    console.log(\r\n      `series ${formData.get(\"series\")}, part ${formData.get(\r\n        \"part\"\r\n      )}, episode ${formData.get(\"episode\")}`\r\n    );\r\n    const twitterLink = this.generateTwitterLink(\r\n      series,\r\n      part,\r\n      episode,\r\n      searchWord\r\n    );\r\n    window.open(twitterLink, \"_blank\", \"noopener,noreferrer\");\r\n    console.log(e);\r\n  }\r\n\r\n  render() {\r\n    const jsxParts: JSX.Element[] = [];\r\n    const seriesInfo = TerahaInfo[this.state.series - 1];\r\n    for (let i = 1; i <= seriesInfo.parts.length; i++) {\r\n      jsxParts.push(\r\n        <option value={i} key={i}>\r\n          Part {i}\r\n        </option>\r\n      );\r\n    }\r\n\r\n    const jsxEpisodes: JSX.Element[] = [];\r\n    const partInfo = seriesInfo.parts[this.state.part - 1];\r\n    if (partInfo) {\r\n      for (let i = 1; i <= partInfo.episodes.length; i++) {\r\n        jsxEpisodes.push(\r\n          <option value={i} key={i}>\r\n            Episode {i}: {partInfo.episodes[i - 1].title}\r\n          </option>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>テラハ放送直後のTwitter</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            {/* Choose Series */}\r\n            <select\r\n              name=\"series\"\r\n              id=\"series\"\r\n              defaultValue={this.state.series}\r\n              onChange={this.handleSeriesChange}\r\n            >\r\n              <option value=\"1\">BOYS×GIRLS NEXT DOOR (2012–2014, 湘南)</option>\r\n              <option value=\"2\">\r\n                BOYS & GIRLS IN THE CITY (2015-2016, 東京)\r\n              </option>\r\n              <option value=\"3\">ALOHA STATE (2016-2017, ハワイ)</option>\r\n              <option value=\"4\">OPENING NEW DOORS (2017-2018, 軽井沢)</option>\r\n              <option value=\"5\">TOKYO (2019-2020, 東京)</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            {/* Choose Part */}\r\n            <select\r\n              name=\"part\"\r\n              id=\"part\"\r\n              defaultValue={this.state.part}\r\n              onChange={this.handlePartChange}\r\n            >\r\n              {jsxParts}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            {/* Choose Episode */}\r\n            <select\r\n              name=\"episode\"\r\n              id=\"episode\"\r\n              defaultValue={this.state.episode}\r\n              onChange={this.handleEpisodeChange}\r\n            >\r\n              {jsxEpisodes}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"searchWord\"\r\n              id=\"searchWord\"\r\n              defaultValue={this.state.searchWord}\r\n              onChange={this.handleSearchWordChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">Twitterへのリンク</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Teraha;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Teraha from \"./screen/Teraha\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Teraha></Teraha>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}