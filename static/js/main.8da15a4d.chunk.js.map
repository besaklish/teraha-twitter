{"version":3,"sources":["screen/Teraha.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["WRONG_TWITTER_LINK","WRONG_DATE_STRING","Teraha","props","state","series","part","episode","searchWord","broadcastType","generateTwitterLink","bind","addDays","handleSeriesChange","handlePartChange","handleSubmit","date","days","result","Date","setDate","getDate","untilDays","console","log","episodeInfo","TerahaInfo","parts","episodes","since","netflixDate","tvDate","untilDate","this","until","toISOString","slice","e","error","tsCopy","JSON","parse","stringify","parseInt","target","value","setState","preventDefault","formData","FormData","get","twitterLink","alert","window","open","jsxParts","seriesInfo","i","length","push","MenuItem","jsxEpisodes","partInfo","title","onSubmit","Box","mb","color","FormControl","InputLabel","Select","name","id","defaultValue","onChange","TextField","type","variant","Button","fontSize","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8da15a4d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TerahaInfo from \"./Teraha.json\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// bad variables\r\nconst WRONG_TWITTER_LINK = \"https://twitter.com/home\";\r\nconst WRONG_DATE_STRING = \"1900-01-01\";\r\n\r\n// interfaces\r\ninterface terahaState {\r\n  series: number;\r\n  part: number;\r\n  episode: number;\r\n  searchWord: string;\r\n  broadcastType: \"Netflix\" | \"TV\";\r\n}\r\n\r\n// main component\r\nclass Teraha extends React.Component<{}, terahaState> {\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = {\r\n      series: 1,\r\n      part: 1,\r\n      episode: 1,\r\n      searchWord: \"テラスハウス\",\r\n      broadcastType: \"Netflix\",\r\n    };\r\n\r\n    this.generateTwitterLink = this.generateTwitterLink.bind(this);\r\n    this.addDays = this.addDays.bind(this);\r\n    this.handleSeriesChange = this.handleSeriesChange.bind(this);\r\n    this.handlePartChange = this.handlePartChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  addDays(date: string, days: number): Date {\r\n    var result = new Date(date);\r\n    result.setDate(result.getDate() + days);\r\n    return result;\r\n  }\r\n\r\n  generateTwitterLink(\r\n    series: number,\r\n    part: number,\r\n    episode: number,\r\n    searchWord: string,\r\n    broadcastType: \"Netflix\" | \"TV\",\r\n    untilDays: number = 3\r\n  ): string {\r\n    try {\r\n      console.log(\r\n        `generateTwitterLink, series ${series}, part ${part}, episode ${episode}`\r\n      );\r\n      const episodeInfo =\r\n        TerahaInfo[series - 1].parts[part - 1].episodes[episode - 1];\r\n      if (episodeInfo) {\r\n        const since =\r\n          broadcastType === \"Netflix\"\r\n            ? episodeInfo.netflixDate\r\n            : episodeInfo.tvDate;\r\n        if (since === WRONG_DATE_STRING) {\r\n          return WRONG_TWITTER_LINK;\r\n        }\r\n        const untilDate = this.addDays(since, untilDays);\r\n        const until = untilDate.toISOString().slice(0, 10);\r\n        return `https://twitter.com/search?q=${searchWord}%20until%3A${until}%20since%3A${since}`;\r\n      }\r\n      return WRONG_TWITTER_LINK;\r\n    } catch (e) {\r\n      console.error(e);\r\n      return WRONG_TWITTER_LINK;\r\n    }\r\n  }\r\n\r\n  handleSeriesChange(e: React.ChangeEvent<{ value: unknown }>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.series = parseInt(e.target.value as string);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handlePartChange(e: React.ChangeEvent<{ value: unknown }>) {\r\n    const tsCopy = JSON.parse(JSON.stringify(this.state));\r\n    tsCopy.part = parseInt(e.target.value as string);\r\n    this.setState(tsCopy);\r\n  }\r\n\r\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target as HTMLFormElement);\r\n    const series = parseInt(formData.get(\"series\") as string);\r\n    const part = parseInt(formData.get(\"part\") as string);\r\n    const episode = parseInt(formData.get(\"episode\") as string);\r\n    const searchWord = formData.get(\"searchWord\") as string;\r\n    const broadcastType = formData.get(\"broadcastType\") as \"Netflix\" | \"TV\";\r\n    if (series && part && episode) {\r\n      this.setState({\r\n        series: series,\r\n        part: part,\r\n        episode: episode,\r\n      });\r\n    }\r\n    console.log(\r\n      `series ${formData.get(\"series\")}, part ${formData.get(\r\n        \"part\"\r\n      )}, episode ${formData.get(\"episode\")}`\r\n    );\r\n    const twitterLink = this.generateTwitterLink(\r\n      series,\r\n      part,\r\n      episode,\r\n      searchWord,\r\n      broadcastType\r\n    );\r\n\r\n    if (twitterLink === WRONG_TWITTER_LINK) {\r\n      alert(\r\n        \"リンクの作成に失敗しました。\\nNetflixは東京編以降(2015.09~2019.10)をサポートしています。\\nTVは東京(2015-2016)のパート1,エピソード1～軽井沢(2017-2018)のパート3,エピソード6までをサポートしています。\"\r\n      );\r\n    } else {\r\n      window.open(twitterLink, \"_blank\", \"noopener,noreferrer\");\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const jsxParts: JSX.Element[] = [];\r\n    const seriesInfo = TerahaInfo[this.state.series - 1];\r\n    for (let i = 1; i <= seriesInfo.parts.length; i++) {\r\n      jsxParts.push(\r\n        <MenuItem value={i} key={i}>\r\n          Part {i}\r\n        </MenuItem>\r\n      );\r\n    }\r\n\r\n    const jsxEpisodes: JSX.Element[] = [];\r\n    const partInfo = seriesInfo.parts[this.state.part - 1];\r\n    if (partInfo) {\r\n      for (let i = 1; i <= partInfo.episodes.length; i++) {\r\n        jsxEpisodes.push(\r\n          <MenuItem value={i} key={i}>\r\n            Episode {i}: {partInfo.episodes[i - 1].title}\r\n          </MenuItem>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>テラハ配信直後のTwitter</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <Box mb={2} color=\"text.primary\">\r\n            <FormControl>\r\n              {/* Choose Series */}\r\n              <InputLabel>シリーズ</InputLabel>\r\n              <Select\r\n                name=\"series\"\r\n                id=\"series\"\r\n                defaultValue={this.state.series}\r\n                onChange={this.handleSeriesChange}\r\n              >\r\n                <MenuItem value=\"1\">\r\n                  BOYS×GIRLS NEXT DOOR (2012–2014, 湘南)\r\n                </MenuItem>\r\n                <MenuItem value=\"2\">\r\n                  BOYS & GIRLS IN THE CITY (2015-2016, 東京)\r\n                </MenuItem>\r\n                <MenuItem value=\"3\">ALOHA STATE (2016-2017, ハワイ)</MenuItem>\r\n                <MenuItem value=\"4\">\r\n                  OPENING NEW DOORS (2017-2018, 軽井沢)\r\n                </MenuItem>\r\n                <MenuItem value=\"5\">TOKYO (2019-2020, 東京)</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              {/* Choose Part */}\r\n              <InputLabel>パート</InputLabel>\r\n              <Select\r\n                name=\"part\"\r\n                id=\"part\"\r\n                defaultValue={this.state.part}\r\n                onChange={this.handlePartChange}\r\n              >\r\n                {jsxParts}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              {/* Choose Episode */}\r\n              <InputLabel>エピソード</InputLabel>\r\n              <Select\r\n                name=\"episode\"\r\n                id=\"episode\"\r\n                defaultValue={this.state.episode}\r\n              >\r\n                {jsxEpisodes}\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              {/* Choose Broadcast type */}\r\n              <InputLabel>放送</InputLabel>\r\n              <Select\r\n                name=\"broadcastType\"\r\n                id=\"broadcastType\"\r\n                defaultValue={this.state.broadcastType}\r\n              >\r\n                <MenuItem value=\"Netflix\">Netflix</MenuItem>\r\n                <MenuItem value=\"TV\">TV</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <FormControl>\r\n              <TextField\r\n                type=\"text\"\r\n                name=\"searchWord\"\r\n                id=\"searchWord\"\r\n                defaultValue={this.state.searchWord}\r\n                variant=\"outlined\"\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          <Box mb={2}>\r\n            <div>\r\n              <Button type=\"submit\">👉Twitterへのリンク👈</Button>\r\n            </div>\r\n          </Box>\r\n        </form>\r\n        <Box fontSize={15}>\r\n          Netflixは東京編以降(2015.09~2019.10)をサポートしています。\r\n        </Box>\r\n        <Box fontSize={15} mb={2}>\r\n          TVは東京(2015-2016)のパート1,エピソード1～軽井沢(2017-2018)のパート3,\r\n          エピソード6までをサポートしています。\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Teraha;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Teraha from \"./screen/Teraha\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Teraha></Teraha>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}